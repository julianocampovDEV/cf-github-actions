name: Deploy Web

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18]
    # Pararme en una carpeta de manera global
    # defaults:
    #   run:
    #     working-directory: 02_Ejemplo

    # Contenedores que suministran servicios que se necesitan para el proyecto
    # Contenedores de Docker
    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Install redis cli
        run: sudo apt-get update -y && sudo apt-get install redis-tools -y

      - name: Test redis
        run: redis-cli -h localhost -p 6379 ping

      - name: Mostrar variable
        run: echo "${{ secrets.TOKEN_SECRET }}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Instalar dependencias
        run: npm install
        # Pararme en una carpeta en un step en específico
        working-directory: ./02_Ejemplo

      - name: Run test
        run: npm run test
        working-directory: ./02_Ejemplo

      - name: Run buld
        run: npm run build
        working-directory: ./02_Ejemplo

      - name: Cargar artefacto (archivos generados en public)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node-version == 18 }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./02_Ejemplo/public/

  deploy:
    # Métodos para ejecutar según lo sucedido en el job dependiente
    # if: ${{ always() }}
    runs-on: ubuntu-latest

    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment-pages.outputs.page_url }}

    steps:
      - name: Ejecutar deploy
        run: echo "Deplo..."

      - name: Desplegar sitio web
        id: deployment-pages
        uses: actions/deploy-pages@v4

  # Notificar via SLACK recordar variable secreta en GitHub
  # notify:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   if: always()
  #   steps:
  #     - name: Notify
  #       uses: 8398a7/action-slack@v4
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK }}
  #       with:
  #         status: ${{ job.status }}
  #         fields: repo,commit,author,action,event_name,ref,workflow,job,took # optional
